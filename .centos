#!/bin/bash

#check permission
if [ $(id -u) != '0' ]; then
	echo 'Error: You must be root to run this script'
	exit 1
fi

#config
cur_dir=${pwd}
node_ver='0.10.28'
pcre_ver='8.35'
nginx_ver='1.6.0'
nginx_user='www'

#installer
function installer(){
	wget -c $3
	tar zxvf $2
	cd $1
	./configure $4
	make && make install
	cd ..
	rm -rf $1
}

#back to root directory
cd

echo '================== add repo & install tools && update && upgrade ==================';
rpm -ivh http://mirrors.sohu.com/fedora-epel/6Server/x86_64/epel-release-6-8.noarch.rpm
yum repolist
yum install -y ntp vim* make cmake gcc gcc-c++ wget curl curl-devel openssl openssl-devel telnet* inotify-tools golang git-core subversion mysql-server memcached php php-fpm php-mysql php-mcrypt php-gd php-mbstring php-xml php-imap php-bcmath php-memcache php-memcached java ant ant-apache-regexp
yum update -y
yum upgrade -y

echo '================== node ==================';
name="node-v${node_ver}"
tar="${name}.tar.gz"
installer ${name} ${tar} "http://nodejs.org/dist/v${node_ver}/${tar}"

echo '================== npm ==================';
npm install -g grunt-cli phonegap cordova

echo '================== pcre ==================';
name="pcre-${pcre_ver}"
tar="${name}.tar.gz"
installer ${name} ${tar} "ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${tar}"

echo '================== nginx ==================';
useradd -s /sbin/nologin ${nginx_user}
chmod 755 /home/${nginx_user}
name="nginx-${nginx_ver}"
tar="${name}.tar.gz"
installer ${name} ${tar} "http://nginx.org/download/${tar}" " --user=www --group=www --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-ipv6"
ln -s /lib64/libpcre.so.0.0.1 /lib64/libpcre.so.1

#echo '================== zend guard loader ==================';
#zendguardloader='ZendGuardLoader-php-5.3-linux-glibc23-x86_64';
#wget -c http://downloads.zend.com/guard/5.5.0/${zendguardloader}.tar.gz
#tar zxvf ${zendguardloader}.tar.gz
#cp ${zendguardloader}/php-5.3.x/ZendGuardLoader.so /usr/lib64/php/modules/ZendGuardLoader.so
#echo '' >> /etc/php.ini
#echo '; zend guard loader' >> /etc/php.ini
#echo 'zend_extension=/usr/lib64/php/modules/ZendGuardLoader.so' >> /etc/php.ini
#echo 'zend_loader.enable=1' >> /etc/php.ini
#echo 'zend_loader.disable_licensing=0' >> /etc/php.ini
#echo 'zend_loader.obfuscation_level_support=3' >> /etc/php.ini

echo '================== config ==================';
sed -i "s/user = apache/user = ${nginx_user}/g" /etc/php-fpm.d/www.conf
sed -i "s/group = apache/group = ${nginx_user}/g" /etc/php-fpm.d/www.conf
chgrp ${nginx_user} /var/lib/php/session
chkconfig --level 2345 php-fpm on
service php-fpm start
chkconfig --level 2345 mysqld on
service mysqld start
#grant all privileges on *.* to user@'host' identified by 'password';
#flush privileges;
chkconfig --level 2345 memcached on
service memcached start

#echo '================== android sdk ==================';
#android='adt-bundle-linux-x86_64-20140321'
#wget -c http://dl.google.com/android/adt/22.6.2/${android}.zip
#jar xvf ${android}.zip
#mv ${android}/sdk /usr/local/adt
#chmod +x /usr/local/adt/tools/android
#echo '' /etc/profile
#echo '#android sdk' /etc/profile
#echo 'export ANDROID_HOME=/usr/local/adt' /etc/profile
#echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' /etc/profile